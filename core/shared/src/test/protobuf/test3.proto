syntax = "proto3";

package jsontest;

import "test.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/field_mask.proto";
import "scalapb/scalapb.proto";

message MyTest3 {
  enum MyEnum3 {
    UNKNOWN = 0;
    V1 = 1;
    V2 = 2;
    V3 = 4;
  }

  string s = 1;
  int32 i32 = 2;
  float f = 3;
  double d = 4;
  map<string, int32> string_to_int32 = 5;
  map<int32, MyTest> int_to_mytest = 6;
  map<fixed64, bytes> fixed64_to_bytes = 7;

  oneof trick_or_treat {
    int32 trick = 16;
    MyTest3 treat = 17;
  }

  repeated MyEnum3 rep_enum = 9;
  MyEnum3 opt_enum = 10;
  map<int32, MyEnum3> int_to_enum = 11;
}

message Wrapper {
  google.protobuf.DoubleValue  w_double = 1;
  google.protobuf.FloatValue   w_float  = 2;
  google.protobuf.Int64Value   w_int64  = 3;
  google.protobuf.UInt64Value  w_uint64 = 4;
  google.protobuf.Int32Value   w_int32  = 5;
  google.protobuf.UInt32Value  w_uint32 = 6;
  google.protobuf.BoolValue    w_bool   = 7;
  google.protobuf.StringValue  w_string = 8;
  google.protobuf.BytesValue   w_bytes  = 9;
}

message StructTest {
  google.protobuf.NullValue nv = 1;
  repeated google.protobuf.NullValue rep_nv = 2;
}

message TestFieldMask {
  google.protobuf.FieldMask field_mask_value = 1;
}

message DefaultInstanceErrorTest {
  int32 x = 1 [(scalapb.field).type = "scalapb_circe.ErrorIfZero"];
}
